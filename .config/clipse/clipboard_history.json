{"clipboardHistory":[{"value":"‚èæ","recorded":"2025-07-23 13:36:44.061426517","filePath":"null","pinned":false},{"value":"Û∞óΩ","recorded":"2025-07-23 13:35:31.050456951","filePath":"null","pinned":false},{"value":"Ó´í","recorded":"2025-07-23 13:34:06.131844947","filePath":"null","pinned":false},{"value":"ÔÄë","recorded":"2025-07-23 13:31:22.843362643","filePath":"null","pinned":false},{"value":"substituters = [\"https://hyprland.cachix.org\"];\n    trusted-substituters = [\"https://hyprland.cachix.org\"];\n    trusted-public-keys = [\"hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=\"];","recorded":"2025-07-21 22:31:12.268721543","filePath":"null","pinned":false},{"value":"portalPackage = inputs.hyprland.packages.${pkgs.stdenv.hostPlatform.system}.xdg-desktop-portal-hyprland;","recorded":"2025-07-21 22:28:25.687332944","filePath":"null","pinned":false},{"value":"package = inputs.hyprland.packages.${pkgs.stdenv.hostPlatform.system}.hyprland;","recorded":"2025-07-21 22:27:33.979840691","filePath":"null","pinned":false},{"value":"inputs.hyprland.url = \"github:hyprwm/Hyprland\";","recorded":"2025-07-21 22:26:40.630444162","filePath":"null","pinned":false},{"value":"39d6d80f6419b05e3358d950d9ee8601b152b8f9","recorded":"2025-07-21 22:26:19.957245357","filePath":"null","pinned":false},{"value":"6d3b93bbf7e6f069a3c3f8539745989938a4dfea","recorded":"2025-07-21 22:00:23.408483991","filePath":"null","pinned":false},{"value":"2dc2b5ccfd368a3cd2fb27d2d1ece05bf0582441","recorded":"2025-07-21 21:45:41.283765932","filePath":"null","pinned":false},{"value":"github:juliosueiras-nix/nix-security#base.vim","recorded":"2025-07-21 21:36:18.559781914","filePath":"null","pinned":false},{"value":"e45883088d5d75515632729157231fdd8ac0e4a5","recorded":"2025-07-21 19:09:26.611228641","filePath":"null","pinned":false},{"value":"sha256-zyPtFqfJPzlb/QBxQ0j3hzWe9+0kTFH/XQ3aGp2jc2w=","recorded":"2025-07-21 18:55:54.988286456","filePath":"null","pinned":false},{"value":"{ config, pkgs, lib, ... }:\n\n{\n  nixpkgs.overlays = [\n    (final: prev: {\n      vim-full = prev.vim-full.overrideAttrs (old: {\n        name = \"Vim-full-git\";\n        src = prev.fetchFromGitHub {\n          owner = \"vim\";\n          repo = \"vim\";\n          rev = \"HEAD\";\n          hash = \"sha256-28q2FuAI/lUrLQWiGY358+52cRzV3NcO1jyrrgQ21Ik=\";\n        };\n     });\n    })\n  ];\n}","recorded":"2025-07-21 18:52:50.403221645","filePath":"null","pinned":false},{"value":"waybar.packages.${pkgs.system}.waybar;","recorded":"2025-07-21 15:43:49.997185660","filePath":"null","pinned":false},{"value":"waybar = {\n      url = \"github:alexays/waybar\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };","recorded":"2025-07-21 15:38:03.273641124","filePath":"null","pinned":false},{"value":"BFBFBF","recorded":"2025-07-20 19:38:57.152395913","filePath":"null","pinned":false},{"value":"8F05CE","recorded":"2025-07-20 19:34:06.130883299","filePath":"null","pinned":false},{"value":"5111B4","recorded":"2025-07-20 19:30:20.332418003","filePath":"null","pinned":false},{"value":"252562","recorded":"2025-07-20 19:07:53.116712010","filePath":"null","pinned":false},{"value":"ferrari 2023 cz dabing","recorded":"2025-07-20 16:04:55.959759098","filePath":"null","pinned":false},{"value":"Legenda jmenem Lamborghini ","recorded":"2025-07-20 12:22:15.405281058","filePath":"null","pinned":false},{"value":"--greeting 'Welcome to NixOS!' --asterisks","recorded":"2025-07-19 23:21:05.734760229","filePath":"null","pinned":false},{"value":"${pkgs.hyprland}/bin/Hyprland","recorded":"2025-07-19 23:08:36.277957949","filePath":"null","pinned":false},{"value":"{\n  pkgs,\n  inputs,\n  ...\n}: let\n  tuigreet = \"${pkgs.greetd.tuigreet}/bin/tuigreet\";\n  hyprland-session = \"${pkgs.hyprland-patched}/share/wayland-sessions\";\nin {\n  services.greetd = {\n    enable = true;\n    settings = {\n      default_session = {\n        command = \"${tuigreet} --time --remember --remember-session --sessions ${hyprland-session}\";\n        user = \"greeter\";\n      };\n    };\n  };\n\n  # this is a life saver.\n  # literally no documentation about this anywhere.\n  # might be good to write about this...\n  # https://www.reddit.com/r/NixOS/comments/u0cdpi/tuigreet_with_xmonad_how/\n  systemd.services.greetd.serviceConfig = {\n    Type = \"idle\";\n    StandardInput = \"tty\";\n    StandardOutput = \"tty\";\n    StandardError = \"journal\"; # Without this errors will spam on screen\n    # Without these bootlogs will spam on screen\n    TTYReset = true;\n    TTYVHangup = true;\n    TTYVTDisallocate = true;\n  };\n}","recorded":"2025-07-19 23:03:49.719086724","filePath":"null","pinned":false},{"value":"services.displayManager.ly = {\n    enable = true;\n    settings = {\n      animate = true;\n      animation = \"cmatrix\";\n      hide_borders = true;\n      clock = \"%c\";\n      bigclock = true;\n      hide_f1_commands = true;\n      # ...\n    };\n  };","recorded":"2025-07-19 22:38:01.519127180","filePath":"null","pinned":false},{"value":"\"${pkgs.greetd.greetd}/bin/agreety","recorded":"2025-07-19 21:38:10.927700602","filePath":"null","pinned":false},{"value":" services.greetd = {\n    enable = true;\n    settings = rec {\n      initial_session = {\n        command = \"${pkgs.hyprland}/bin/Hyprland\";\n        user = \"iancleary\";\n      };\n      default_session = initial_session;\n    };\n  };","recorded":"2025-07-19 15:44:01.339191390","filePath":"null","pinned":false},{"value":"font-size=12","recorded":"2025-07-19 14:22:49.579141410","filePath":"null","pinned":false},{"value":"nerd-fonts.hack","recorded":"2025-07-19 11:47:39.117292911","filePath":"null","pinned":false},{"value":"Hack Nerd Font","recorded":"2025-07-19 11:47:11.062607910","filePath":"null","pinned":false},{"value":" console.enable = false;\n  services.kmscon = {\n    enable = true;\n    fonts = [ { name = \"Sarasa Term J\"; package = pkgs.sarasa-gothic; } ];\n    hwRender = true;\n    useXkbConfig = true;\n  };","recorded":"2025-07-19 11:38:33.650995899","filePath":"null","pinned":false},{"value":"kmscon","recorded":"2025-07-19 11:36:33.913811534","filePath":"null","pinned":false},{"value":"ls -1 /etc/kbd/consolefonts |sort |less","recorded":"2025-07-19 11:33:28.442903118","filePath":"null","pinned":false},{"value":"environment.interactiveShellInit = ''\n  grep -q /dev/tty \u003c(tty) \u0026\u0026 exec fbterm\n'';\nsecurity.wrappers.fbterm = {\n  setuid = true;\n  owner = \"root\";\n  group = \"root\";\n  source = \"${pkgs.fbterm}/bin/fbterm\";\n};","recorded":"2025-07-19 11:18:57.626428493","filePath":"null","pinned":false},{"value":"console.useXkbConfig = true;","recorded":"2025-07-19 10:58:24.830637732","filePath":"null","pinned":false},{"value":"[[mgr.prepend_keymap]]\non   = [ \"c\", \"a\", \"p\" ]\nrun  = \"plugin compress -p\"\ndesc = \"Archive selected files (password)\"","recorded":"2025-07-18 16:45:54.797092486","filePath":"null","pinned":false},{"value":"ya pkg add KKV9/compress","recorded":"2025-07-18 16:24:21.612348540","filePath":"null","pinned":false},{"value":"mate.caja-with-extensions","recorded":"2025-07-18 11:40:24.250780871","filePath":"null","pinned":false},{"value":"nix-shell -p mate.caja-with-extensions","recorded":"2025-07-18 11:33:50.860186536","filePath":"null","pinned":false},{"value":"{ pkgs, ... }:\n\nlet\n  tuigreet = \"${pkgs.greetd.tuigreet}/bin/tuigreet\";\n  session = \"${pkgs.hyprland}/bin/Hyprland\";\n  username = \"user\";\nin\n\n{\n  services.greetd = {\n    enable = true;\n    settings = {\n      initial_session = {\n        command = \"${session}\";\n        user = \"${username}\";\n      };\n      default_session = {\n        command = \"${tuigreet} --greeting 'Welcome to NixOS!' --asterisks --remember --remember-user-session --time -cmd ${session}\";\n        user = \"greeter\";\n      };\n    };\n  };\n}\n","recorded":"2025-07-17 21:04:13.622308250","filePath":"null","pinned":false},{"value":"border=magenta;text=cyan;prompt=green;time=red;action=blue;button=yellow;container=black;input=red","recorded":"2025-07-17 20:58:39.172333833","filePath":"null","pinned":false},{"value":".command = \"${pkgs.greetd.greetd}/bin/agreety --cmd ${pkgs.bashInteractive}/bin/bash\";","recorded":"2025-07-17 16:24:35.022884778","filePath":"null","pinned":false},{"value":"services.greetd = {\n    enable = true;\n    settings = rec {\n      initial_session = {\n        command = \"${pkgs.hyprland}/bin/Hyprland\";\n        user = \"iancleary\";\n      };\n      default_session = initial_session;\n    };\n  };\n","recorded":"2025-07-17 15:59:48.574517754","filePath":"null","pinned":false},{"value":"let\n    custom-sddm-astronaut = pkgs.sddm-astronaut.override {\n","recorded":"2025-07-17 15:13:11.956049180","filePath":"null","pinned":false},{"value":"              enable = true;\n              user = \"libor\";\n","recorded":"2025-07-17 15:02:00.496279758","filePath":"null","pinned":false},{"value":"[AdwStyleManager]\ncolor-scheme=ADW_COLOR_SCHEME_PREFER_DARK","recorded":"2025-07-15 21:30:47.279299672","filePath":"null","pinned":true},{"value":"Please use AdwStyleManager:color-scheme ","recorded":"2025-07-15 21:27:31.026037738","filePath":"null","pinned":false},{"value":"du -hac /nix/store/ --max-depth 1 | sort -h","recorded":"2025-07-15 20:47:42.306887624","filePath":"null","pinned":false},{"value":"# Rozlo≈æen√≠ kl√°vesnice\nbind = $mainMod, space, exec, ~/.dotfiles/scripts/kbdlayout.sh","recorded":"2025-07-15 20:23:07.820228164","filePath":"null","pinned":false},{"value":"/run/media/libor/openSUSE/home/libor/.dotfiles/scripts/kbdlayout.sh","recorded":"2025-07-15 20:20:42.153008770","filePath":"null","pinned":false},{"value":"vapor apart retreat frozen region lobster drill topple ready lend vibrant index jelly tennis critic clutch lonely boat update error empty enlist guitar citizen mule","recorded":"2025-07-14 15:42:45.445173653","filePath":"null","pinned":false},{"value":"üá∫üá∏","recorded":"2025-07-13 18:28:47.347293075","filePath":"null","pinned":false},{"value":"dd bs=4M if=path/to/.iso of=/dev/My_flash_drive conv=fsync oflag=direct status=progress","recorded":"2025-07-13 11:06:01.009516198","filePath":"null","pinned":true},{"value":"dd bs=4M if=path/to/archlinux-version-x86_64.iso of=/dev/disk/by-id/usb-My_flash_drive conv=fsync oflag=direct status=progress","recorded":"2025-07-13 11:04:35.219161925","filePath":"null","pinned":false},{"value":"http://127.0.0.1:24680","recorded":"2025-07-13 10:46:09.164352635","filePath":"null","pinned":false},{"value":"nix-shell -p ventoy-full","recorded":"2025-07-13 10:45:19.418350613","filePath":"null","pinned":false},{"value":"NIXPKGS_ALLOW_UNFREE=1","recorded":"2025-07-13 10:45:11.807423412","filePath":"null","pinned":false},{"value":"NIXPKGS_ALLOW_INSECURE=1","recorded":"2025-07-13 10:44:57.409012695","filePath":"null","pinned":false},{"value":"Ôåî","recorded":"2025-07-12 18:19:59.635054043","filePath":"null","pinned":true},{"value":"Ôåì","recorded":"2025-07-12 18:16:49.705183489","filePath":"null","pinned":true},{"value":"        packages.default = pkgs.writeScriptBin \"runme\" ''\n          echo \"I am currently being run!\"\n        '';\n\n        # An app that uses the `runme` package\n        apps.default = {\n          type = \"app\";\n          program = \"${self.packages.${system}.runme}/bin/runme\";\n        };\n      });","recorded":"2025-07-12 15:28:44.559496731","filePath":"null","pinned":false},{"value":"packages.default = pkgs.writeScriptBin \"runme\" ''\n          echo \"I am currently being run!\"\n        '';\n\n        # An app that uses the `runme` package\n        apps.default = {\n          type = \"app\";\n          program = \"${self.packages.${system}.runme}/bin/runme\";\n        };\n      });","recorded":"2025-07-12 15:26:55.074909731","filePath":"null","pinned":false},{"value":"flake-utils.lib.eachDefaultSystem (system:","recorded":"2025-07-12 15:08:33.860564352","filePath":"null","pinned":false},{"value":"pkgs = import nixpkgs { inherit system; };","recorded":"2025-07-12 14:58:03.464560545","filePath":"null","pinned":false},{"value":"flake-utils.lib.eachDefaultSystem (system:\n      let\n        pkgs = import nixpkgs { inherit system; };\n      in\n      {\n        # A simple executable package\n        packages.default = pkgs.writeScriptBin \"runme\" ''\n          echo \"I am currently being run!\"\n        '';\n\n        # An app that uses the `runme` package\n        apps.default = {\n          type = \"app\";\n          program = \"${self.packages.${system}.runme}/bin/runme\";\n        };\n      });","recorded":"2025-07-12 14:57:17.167049388","filePath":"null","pinned":false},{"value":"path '¬´gitlab:lrestj/nixos/d9d440ba6d6dd81810bf968feeec336374c5ff13¬ª/flake.nix' does not exist","recorded":"2025-07-12 14:40:25.207459468","filePath":"null","pinned":false},{"value":".local/share/sddm/","recorded":"2025-07-12 13:51:56.085823888","filePath":"null","pinned":false},{"value":"vapor apart retreat frozen region lobster drill topple ready lend vibrant index jelly tennis critic clutch lonely boat update error empty enlist guitar citizen movie","recorded":"2025-07-12 12:37:04.860758640","filePath":"null","pinned":false},{"value":".config/geany/session.conf","recorded":"2025-07-12 12:32:07.198492294","filePath":"null","pinned":false},{"value":"mkdir Public Videa Sta≈æen√© Temp Hudba Obr√°zky","recorded":"2025-07-12 12:24:28.731296244","filePath":"null","pinned":false},{"value":"vapor apart retreat frozen region lobster drill topple ready lend vibrant index jelly tennis critic clutch lonely boat update error empty enlist guitar citizen model","recorded":"2025-06-23 20:52:02.091417936","filePath":"null","pinned":false},{"value":"Permissions 0755 for '/home/libor/.ssh/id_ed25519' are too open","recorded":"2025-06-23 12:34:19.852913192","filePath":"null","pinned":false},{"value":"\n# git@github.com:lrestj/debian.git\n# ssh://git@codeberg.org/lrestj/debian.git\n\ngit --git-dir=/home/libor/.cfg.git/ --work-tree=/home/libor remote remove origin\ngit --git-dir=/home/libor/.cfg.git/ --work-tree=/home/libor remote add github git@github.com:lrestj/debian.git\ngit --git-dir=/home/libor/.cfg.git/ --work-tree=/home/libor remote add codeberg ssh://git@codeberg.org/lrestj/debian.git\ngit config --global user.email \"rest@seznam.cz\"\ngit config --global user.name \"LrestJ\"\n\necho \"Codeberg and Github remote repos added\"\necho -e \"\\n\"\necho \"END OF INSTALLATION\" \n\n\n##### END OF FILE #####","recorded":"2025-06-23 12:26:16.871937464","filePath":"null","pinned":false},{"value":"file:///run/media/libor/Ventoy/Linux/.ssh\r\n","recorded":"2025-06-23 12:23:37.587681247","filePath":"null","pinned":false},{"value":"git --git-dir=$HOME/.cfg-git/ --work-tree=$HOME config --local status.showUntrackedFiles no\n","recorded":"2025-06-23 12:14:35.016676086","filePath":"null","pinned":false},{"value":"Getting started\nWe‚Äôll start by initializing a git bare repository.\n\ngit init --bare $HOME/.cfg\nChange .cfg to any name you wish. This is just an arbitrary name for our repository.\n\nDefine an alias for the command. You can also use any other alias that you would want. This is for brevity only. We don‚Äôt want typing lengthy commands everytime!\n\nalias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\nRun this next command to hide all files that we are not explicitly keeping track of.\n\nconfig config --local status.showUntrackedFiles no\nAdd the alias to your .bashrc or .zshrc or config.fish for convenience. You can also run this command to save you time.\n\necho \"alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\" \u003e\u003e $HOME/.bashrc\nAnd that‚Äôs it! You have successfully set up your git bare repository. You can pass git commands to your alias and add your dotfiles and other configurations. Of course, this is not limited to just dotfiles. You can add all kinds of files and directories here.\n\nconfig status\nconfig add .bashrc\nconfig commit -m \"Add bashrc\"\nconfig push\nCloning your previous configurations to your new installation\nSo you have decided to do a clean install of your operating system and you want to have it configured fast. Your git repository is here and ready to settle in your new system.\n\nSet up your alias before starting. You may just type it in your terminal or add it to your .bashrc, .zshrc, config.fish.\n\nalias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\nAdd your git bare repository to a .gitignore file. This will help you avoid any recursion problems.\n\necho \".cfg\" \u003e\u003e .gitignore\nAgain, .cfg is an arbitrary directory name. You can use any folder name you wish.\n\nYou‚Äôre now ready to clone your dotfiles into a git bare repository. Take note that you will need to use your the directory you specified in the previous step, replacing the .cfg directory in this command.\n\ngit clone --bare \u003cgit-repo-url\u003e $HOME/.cfg\nMake sure that your alias is defined in your current shell scope. If you have the alias in your .bashrc, .zshrc, or config.fish, you may need to source them again for the alias to take effect.\n\nalias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\nOR\n\nsource .bashrc\nCheckout the contents of your bare repository to your $HOME directory.\n\nconfig checkout\nOf course, this command might fail as you might have similarly named files already in your new installation. You may see errors such as the one below.\n\nerror: The following untracked working tree files would be overwritten by checkout:\n    .bashrc\n    .gitignore\nPlease move or remove them before you can switch branches.\nAborting\nThere is a solution mentioned in an article in Atlassian written by @durdn. It involves backing up the files using a shell script. I think this is an elegant and efficient way for backing up files causing the checkout error.\n\nmkdir -p .config-backup \u0026\u0026 \\\\\nconfig checkout 2\u003e\u00261 | egrep \"\\\\s+\\\\.\" | awk {'print $1'} | \\\\\nxargs -I{} mv {} .config-backup/{}\nAfter running the above, run the checkout command again.\n\nconfig checkout\nOnce you run config status, you may see a lot of untracked files again. Let‚Äôs set the showUntrackedStatus flag to noagain so we‚Äôll only see files which we only explicitly track.\n\nconfig config --local status.showUntrackedFiles no\n\nYour set up is now complete and you can now add and update files using your config alias and git commands.\n\nconfig status\nconfig add .bashrc\nconfig commit -m \"Add bashrc\"\nconfig push","recorded":"2025-05-12 19:23:48.521877472","filePath":"null","pinned":false},{"value":"echo \"alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'\" \u003e\u003e $HOME/.bashrc","recorded":"2025-05-12 17:20:30.986687779","filePath":"null","pinned":false},{"value":"git --git-dir=$HOME/.cfg/ --work-tree=$HOME","recorded":"2025-05-12 17:11:46.530953091","filePath":"null","pinned":false},{"value":"config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'","recorded":"2025-05-12 17:10:13.162477245","filePath":"null","pinned":false},{"value":"file:///home/libor/.dotfiles/dotconfig/alacritty\r\n","recorded":"2025-05-12 15:56:37.897175194","filePath":"null","pinned":false},{"value":"alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'","recorded":"2025-05-12 15:54:00.790077804","filePath":"null","pinned":false},{"value":"config config --local status.showUntrackedFiles no","recorded":"2025-05-12 15:48:23.606432122","filePath":"null","pinned":false},{"value":"git init --bare $HOME/.cfg","recorded":"2025-05-12 15:45:10.833992723","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-05-11 14:12:06.745462612","filePath":"null","pinned":false},{"value":"sleep 3; hyprctl layers","recorded":"2025-05-11 13:32:09.699712377","filePath":"null","pinned":false},{"value":"layerrule = rule, namespace","recorded":"2025-05-11 13:25:46.730631870","filePath":"null","pinned":false},{"value":"windowrulev2=noblur,class:^()$,title:^()$\n\n","recorded":"2025-05-11 13:16:46.885553239","filePath":"null","pinned":false},{"value":"title:(.*)(Envelopes","recorded":"2025-05-11 13:07:20.109483665","filePath":"null","pinned":false},{"value":"windowrulev2 = opaque,class:(),title:()","recorded":"2025-05-11 12:59:11.839968613","filePath":"null","pinned":false},{"value":"windowrulev2 = opaque,class:(),title:()\nwindowrulev2 = noshadow,class:(),title:()\nwindowrulev2 = noblur,class:(),title:()\n","recorded":"2025-05-11 12:31:38.485026323","filePath":"null","pinned":false},{"value":" blur {\n        enabled = true\n        size = 8\n        passes = 3\n        new_optimizations = yes\n        ignore_opacity = true\n        xray = true\n        popups = true\n        blurls = waybar\n        blurls = wofi\n        blurls = swaync-control-center\n        blurls = swaync-notification-window\n    }","recorded":"2025-05-11 11:58:36.992952735","filePath":"null","pinned":false},{"value":"blur = yes\n    blur_size = 5\n    blur_passes = 1\n    blur_new_optimizations = on","recorded":"2025-05-11 11:54:17.250842653","filePath":"null","pinned":false},{"value":"\\nMenu obl√≠ben√Ωch: ALT+Y","recorded":"2025-05-11 10:49:45.067933488","filePath":"null","pinned":false},{"value":"\\nMenu aplikac√≠: Ôèä ","recorded":"2025-05-11 10:49:06.403626305","filePath":"null","pinned":false},{"value":"\\nOkno na celou obrazovku a zpƒõt: Ôèä+F","recorded":"2025-05-11 10:48:45.124402241","filePath":"null","pinned":false},{"value":"üíæ","recorded":"2025-05-05 12:52:00.914208423","filePath":"null","pinned":true},{"value":"sudo nix-env -p /nix/var/nix/profiles/system --list-generations | awk '{print $1}'| paste -s -d \" \"","recorded":"2024-12-05 11:23:51.058993672","filePath":"null","pinned":true},{"value":"Ôèä","recorded":"2024-12-03 14:45:44.142811057","filePath":"null","pinned":true}]}